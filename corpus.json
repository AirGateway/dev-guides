[{"id":"mydoc_Hub_API_Docs","name":"Hub API Docs","url":"hub-api-docs","content":"Hub API Docs\nWe offer an API for provisioning credentials so you can easily create new consumers, agencies and agents in our systems.\nYou can use this API to manage Agencies, Agents, Consumers and Users in your organizations. You can list our providers, Plans and the APIs we offer, as long as create new tokens for your agents so they can consume our services.\nIf you are interested in using this API, please contact us.\nV1.0 https://hub.airgateway.net/api/static/swagger-ui/#/\nYou can see a workflow example in this chapter\n"},{"id":"mydoc_NDC_JSON_API_Docs","name":"NDC API Docs","url":"ndc-api-docs","content":"These are existing versions of our NDC JSON API:\nV1 https://api.airgateway.net/v1/ (deprecated)\nV1.1 https://api.airgateway.net/v1.1/ (docs (https://api.airgateway.net/v1.1/swagger-ui/))\nV1.2 (Coming soon)\n"},{"id":"mydoc_agencies","name":"Agencies","url":"agencies","content":"Each consumer will have at least one agency, but sometimes they have many different agencies (different offices around the same country for example).\nAgencies (https://hub.airgateway.net/api/static/swagger-ui/#!/Agencies/post_agencies) are really simple entities which will only have a name and a reference to the consumer they belong.\nAll these steps can be done via our own hub application which you'll have access to\n"},{"id":"mydoc_agents","name":"Agents","url":"agents","content":"Finally, each agency can have many agents working there. We use this entity you trace the whole selling process to every user involved. When a user logs into your system, you'll have to send his/her key (token) credential so we can know who's performing the action and what consumer he/she belongs to (check Authentication in Gettin Started chapter).\nAgents (https://hub.airgateway.net/api/static/swagger-ui/#!/Agents/post_agents) have some specific information about the user, but these are the most relevant:\nUsername\nEmail\nAgency id\nPassword\nIf you ever want your users to login in our Bookingpad app directly, you'll have to share with them their username, agency name and password. You can check more information about Bookingpad authentication in the open source project (https://github.com/AirGateway/bookingpad-app).\nAll these steps can be done via our own hub application which you'll have access to\nAuthenticating agents\nIn our bookingpad tool, agents can login using their username, agency and password. But sometimes, your needs include your users login only on your own app (which uses our JSON API) and you want them to use bookingpad only for something that your own app doesn't support (check https://dev-guides.airgateway.net/hubapidocs to know how to create agents in your organization, you'll need to store all the agents information in your app). You can use our own bookingpad or a different instance you have in your servers, in this case we'll use our own bookingpad instance domain.\nYou can achieve this by using following process:\nObtain access token for the user you want to auto-authenticate\nCall https://app.airgateway.net/api/login\nSend username, agencyID and password of the user you want to get the access token as data-binary\nExample: curl 'https://app.airgateway.net/api/login' -H 'pragma: no-cache' -H 'origin: https://yourdomain.com' -H 'accept-encoding: gzip, deflate, br' -H 'accept-language: ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7,de;q=0.6,it;q=0.5' -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36' -H 'content-type: application/json;charset=UTF-8' -H 'accept: application/json, text/plain, */*' -H 'cache-control: no-cache' -H 'authority: app.airgateway.net' -H 'referer: https://yourdomain.com' --data-binary '{\"username\":\"agent\", \"agencyID\":\"agency\", \"password\":\"XXXXXXX\"}' --compressed\nIn order to make this work, please let us know the domain you'll call us from\nYou'll receive an access token in the response which you'll have to add to the url you'll redirect your user to:\nhttps://app.airgateway.net/login?access_token=XXXXXXXXXXXXXX\nIf you want to send your users to our bookingpad once they have finished creating an order, so they can add ancillaries or seats, you can use \"redirect_url\" so once they are auto-logged they will be redirected to the page with the order they created:\nhttps://app.airgateway.net/login?accesstoken=XXXXXXXXXXXXXX&redirecturl=https://app.airgateway.net/orders/LH/AGW-XXXXXXX\n"},{"id":"mydoc_authentication","name":"Authentication","url":"authentication","content":"To be able to access our platform you will have to get a validated credentials on our Sandbox Agency Portal (https://agency.airgateway.net/).\nAfter registration, you would be able to apply for an Authentication key. We will review your application details asap and come back to you.\nAll requests sent to the *NDC JSON API * require to be authenticated with an HTTP header like this:\nAuthorization: {Authorization-key}\nAn Authorization-key can be obtained on our Agency Portal\n"},{"id":"mydoc_booking","name":"Booking","url":"booking","content":"This is the basic workflow you need to run to buy tickets from any airline.\nRegular Booking\nRegular booking ../../images/bookingregular.png\nAirShopping\nOfferPrice\nOrderCreate (without Form of Payment)\nAirDocIssue\nBooking Workflow with Autoticketing\nBooking with Autoticketing ../../images/bookingauto.png\nAirShopping\nOfferPrice\nOrderCreate (with Form of Payment)\nBooking with Seats\nBooking with Seats ../../images/bookingseats.png\nAirShopping\nOfferPrice\nSeatAvailability\nOrderCreate (with Form of Payment)\n"},{"id":"mydoc_consumers","name":"Consumers","url":"consumers","content":"The top level entity in our hub are consumers. Each consumer represents one company which has credentials to use NDC with one or many airlines (providers).\nThese consumers (https://hub.airgateway.net/api/static/swagger-ui/#!/Consumers/post_consumers) will have one or many agencies, depending on their size. And each of these agencies will have one or many agents.\nYou'll need to setup some information about consumer like:\nCountry code\nCity code\nCity name\nCurrency code\nContact email\nIATA Number\nHere you can save the default values for payment like BSP.\nA very important part of this step is adding providers to every single consumer they want (each consumer can have agreements with one or many airlines). You can retrieve all the available providers with providers request (https://hub.airgateway.net/api/static/swagger-ui/#!/Providers).\nOnce you have added one or many providers, you can retrieve their providers fields (https://hub.airgateway.net/api/static/swagger-ui/#!/Provider_Fields/get_provider_fields) (each provider needs different credentials, you'll get a list of these fields like \"key\" or \"secret\" which will be named after the documents airlines will send your consumers).\nAll these steps can be done via our own hub application which you'll have access to\n"},{"id":"mydoc_getting_started","name":"Getting Started","url":"getting-started","content":"NDC JSON API Introduction\nOur NDC JSON API is a software solution to allow third parties consume NDC APIs from airlines in an easy way.\nIt's completely JSON based and homogenizes every provider NDC implementation so that new developers only need to focus in their own app and forget about painful integrations with each new airline they need connecting to.\n"},{"id":"mydoc_introduction","name":"Introduction","url":"introduction","content":"Overview\nThis site provides documentation, training, and other notes for the Jekyll Documentation theme. There's a lot of information about how to do a variety of things here, and it's not all unique to this theme. But by and large, understanding how to do things in Jekyll depends on how your theme is coded. As a result, these additional details are provided.\nThe instructions here are geared towards technical writers working on documentation. You may have a team of one or more technical writers working on documentation for multiple projects. You can use this same theme to author all of your documentation for each of your products. The theme is built to accommodate documentation for multiple products on the same site.\nSurvey of features\nSome of the more prominent features of this theme include the following:\nBootstrap framework\nNavgoco multi-level sidebar (http://www.komposta.net/article/navgoco) for table of contents\nAbility to specify different sidebars for different products\nTop navigation bar with drop-down menus\nNotes, tips, and warning information notes\nTags for alternative navigation\nAdvanced landing page layouts from the Modern Business theme (http://startbootstrap.com/template-overviews/modern-business/).\nGetting started\nTo get started, see [Getting Started][index].\n"},{"id":"mydoc_keys","name":"Keys","url":"keys","content":"This is the last step you need before you start sending requests to our JSON API. Every agent can have a key for each of our offered plans. For example, we offer a plan for our JSON API v1.0 and another for JSON API v1.1, so one agent could have a token for each of these.\nEach Key (https://hub.airgateway.net/api/static/swagger-ui/#!/Agent_Keys/post_keys) will be created with some information, including:\nPlan id (https://hub.airgateway.net/api/static/swagger-ui/#!/Plans/get_plans)\nAgent id\nOnce you have a token for an agent, you can start calling the JSON API using it impersonating your agents as it's explained here (https://dev-guides.airgateway.net/getting_started/authentication/).\nAll these steps can be done via our own hub application which you'll have access to\n"},{"id":"mydoc_multi_provider_requests","name":"Multi-provider requests","url":"multi-provider-requests","content":"This requests are basically restricted to one single NDC method call (AirShopping) since it's the only NDC method that makes sense to be concurrently requested to multiple NDC providers.\nTo execute a MPR you only need send a valid standard NDC AirShopping request including an HTTP header like this:\nAG-Providers: *\nThis is interpreted by the NDC Gateway like a send to all available NDC providers for the consumer.\nAlternatively, you can define a list of providers using a list of comma-separated standard IATA airline designators (https://en.wikipedia.org/wiki/List_of_airline_codes).\nAG-Providers: BA, AA, LH\nMPR Responses\nMulti-Provider responses\nMPRs behave asynchronously when used this HTTP headers:\nConnection: keep-alive\nMPR response formats:\nOur MPR responses (only applies to AirShopping seraches) has two modes: Streaming or Standard HTTP.\nTo enabled streaming mode (strongly recommended for GUI Applications) it's required to send the following HTTP header:\nAG-Connection: keep-alive\nAnd optionally, for the streaming mode a timeout in the server-side can be set upon request of the client.\nKeep-Alive: timeout=xx (where xx is an integer number in seconds)\nImportant note\nPlease, keep in mind streaming mode responses use a non-standard JSON notation wrapping called JSON Streaming (https://en.wikipedia.org/wiki/JSON_streaming) used to streamline a collection of valid JSON objects instead of a resulting JSON-valid notation.\n"},{"id":"mydoc_providers","name":"Providers List","url":"providers-list","content":"This is a table of our Providers (Airlines) content displaying their capabilities supported through our aggregation platform.\n| NDC Airlines | Shopping & Booking | On-Hold & Issuing  |  Cancel & Refund   |   Pre-Sale Services    |           Post-Sale Services            | Changes |     FQTV Card      |                                Fare Types                                |           FoP            |\n| ------------ | :----------------: | :----------------: | :----------------: | :--------------------: | :-------------------------------------: | :-----: | :----------------: | :----------------------------------------------------------------------: | :----------------------: |\n| BA       | :whitecheckmark: | :whitecheckmark: | :whitecheckmark: | :seat: :baggageclaim: | :seat: :baggageclaim: :forkandknife: | :date:  | :whitecheckmark: | :globewithmeridians: :closedlockwithkey: :chartwithupwardstrend: | :moneybag: :creditcard: |\n| IB       | :whitecheckmark: | :whitecheckmark: | :whitecheckmark: | :seat: :baggageclaim: |         :seat: :baggageclaim:          | :date:  | :whitecheckmark: | :globewithmeridians: :closedlockwithkey: :chartwithupwardstrend: | :moneybag: :creditcard: |\n| LH       | :whitecheckmark: | :whitecheckmark: | :whitecheckmark: | :seat: :baggageclaim: |         :seat: :baggageclaim:          | :date:  | :whitecheckmark: | :globewithmeridians: :closedlockwithkey: :chartwithupwardstrend: | :moneybag: :creditcard: |\n| LX       | :whitecheckmark: | :whitecheckmark: | :whitecheckmark: | :seat: :baggageclaim: |         :seat: :baggageclaim:          | :date:  | :whitecheckmark: | :globewithmeridians: :closedlockwithkey: :chartwithupwardstrend: | :moneybag: :creditcard: |\n| OS       | :whitecheckmark: | :whitecheckmark: | :whitecheckmark: | :seat: :baggageclaim: |         :seat: :baggageclaim:          | :date:  | :whitecheckmark: | :globewithmeridians: :closedlockwithkey: :chartwithupwardstrend: | :moneybag: :creditcard: |\n| SN       | :whitecheckmark: | :whitecheckmark: | :whitecheckmark: | :seat: :baggageclaim: |         :seat: :baggageclaim:          | :date:  | :whitecheckmark: | :globewithmeridians: :closedlockwithkey: :chartwithupwardstrend: | :moneybag: :creditcard: |\n| AA       | :whitecheckmark: | :whitecheckmark: | :whitecheckmark: | :seat: :baggageclaim: |         :seat: :baggageclaim:          | :date:  | :whitecheckmark: | :globewithmeridians: :closedlockwithkey: :chartwithupwardstrend: | :moneybag: :creditcard: |\n| UA       | :whitecheckmark: | :whitecheckmark: | :whitecheckmark: | :seat: :baggageclaim: |         :seat: :baggageclaim:          | :date:  | :whitecheckmark: | :globewithmeridians: :closedlockwithkey: :chartwithupwardstrend: | :moneybag: :creditcard: |\n| A3       | :whitecheckmark: | :whitecheckmark: | :whitecheckmark: | :seat: :baggageclaim: |         :seat: :baggageclaim:          | :date:  | :whitecheckmark: | :globewithmeridians: :closedlockwithkey: :chartwithupwardstrend: | :moneybag: :creditcard: |\n| AF       | :whitecheckmark: | :whitecheckmark: |        :x:         |           -           |                 :seat:                  |   -    |         -         |                          :globewithmeridians:                          |        :moneybag:        |\n| KL       | :whitecheckmark: | :whitecheckmark: |        :x:         |           -           |                 :seat:                  |   -    |         -         |                          :globewithmeridians:                          |        :moneybag:        |\n| EK       | :whitecheckmark: | :whitecheckmark: | :whitecheckmark: |           -           |         :seat: :baggageclaim:          |   -    |         -         |                          :globewithmeridians:                          |        :moneybag:        |\n| WS       | :whitecheckmark: | :whitecheckmark: | :whitecheckmark: |           -           |                 :seat:                  |   -    |         -         |                          :globewithmeridians:                          | :moneybag: :creditcard: |\n| SQ       | :whitecheckmark: | :whitecheckmark: | :whitecheckmark: |           -           |                 :seat:                  |   -    |         -         |                          :globewithmeridians:                          | :moneybag: :creditcard: |\n| AY       | :whitecheckmark: | :whitecheckmark: | :whitecheckmark: |           -           |                 :seat:                  |   -    |         -         |                          :globewithmeridians:                          | :moneybag: :creditcard: |\n| VY       | :whitecheckmark: | :whitecheckmark: | :whitecheckmark: |           -           |                 :seat:                  |   -    |         -         |                          :globewithmeridians:                          | :moneybag: :creditcard: |\n| QF       |       :soon:       |       :soon:       |       :soon:       |         :soon:         |                 :soon:                  | :soon:  |       :soon:       |                                  :soon:                                  |          :soon:          |\n| EY       |       :soon:       |       :soon:       |       :soon:       |         :soon:         |                 :soon:                  | :soon:  |       :soon:       |                                  :soon:                                  |          :soon:          |\n| Other Providers                                          | Shopping & Booking | On-Hold & Issuing | Cancel & Refund | Pre-Sale Services | Post-Sale Services | Changes | FQTV Card |       Fare Types       |           FoP            |\n| -------------------------------------------------------- | :----------------: | :---------------: | :-------------: | :---------------: | :----------------: | :-----: | :-------: | :--------------------: | :----------------------: |\n| TripStack (https://www.tripstack.com/products/lcc/) | :whitecheckmark: |         -         |        -        |      :soon:       |         -          |    -    |     -     | :globewithmeridians: |      :creditcard:       |\n| Hahn Air (https://www.hahnair.com/en)               | :whitecheckmark: |      :soon:       |     :soon:      |      :soon:       |         -          |    -    |     -     | :globewithmeridians: | :moneybag: :creditcard: |\nIcons\n:soon: In progress\n:whitecheckmark: Supported feature\n:seat: Seat selection\n:baggage_claim: Extra Baggage\n:date: Change flight dates\n:credit_card: Credit card payment\n:moneybag: Cash Payment (BSP/ARC)\n:x: Not available\n:globewithmeridians: Public Fares\n:closedlockwith_key: Private Fares\n:chartwithupwards_trend: Corporate Fares\n"},{"id":"mydoc_sending_requests","name":"Sending Requests","url":"sending-requests","content":"We use HTTP/1.1 as communication protocol to accept requests to the gateway. All NDC requests are sent using the POST HTTP method.\nThe public endpoint to our NDC Gateway remains immutable for all NDC requests and it is:\nVersion 1: (deprecated)\nVersion 1.1: https://proxy.airgateway.net/v1.1/\nWe require some mandatory basic HTTP headers intended for message formatting:\nContent-Type: application/json\nAccept: application/json\nAuthorization: XXXXXXXXXXXXX. You'll have to send your API token here or you won't be able to use AirGateway.\nWe accept some extra headers to change default behaviour:\nAG-Providers: value. Check multi-provider and single-provider requests pages for more information. You'll use \"*\" to request all your providers offers and the IATA code to select specific airlines (BA, IB, AA, LH...).\nAG-Connection: keep-alive. This will return data streamed as soon as we receive the response from the airlines instead of waiting to have all airlines responses before returning data.\nAG-Session-ID: XXXXX-XXXXX-XXXXXX. With the first request for a session (usually, an AirShopping) you'll receive a AG-Session-ID header in response. You should use this header to allow us track full sessions combined with next header.\nAG-Trace: true. This is only accepted in sandbox environment and should only be used for debug purposes. If you experience any issue, please send your example requests with this header and using the same AG-Session-ID header. Then please, share the AG-Session-ID with us when reporting issue.\nAG-Per-Provider-Limit: max number of offers received for each provider.\nIt's very relevant to distinguish between two types of requests to send to the NDC Gateway. Attending to the architecture, we have two types of requests with significant differences between them:\nMPR (Multiple provider requests)\nSPR (Single provider requests)\n"},{"id":"mydoc_servicing","name":"Servicing","url":"servicing","content":"In some orders, you might be interested in adding new services like seats, ancillaries or even change your orders. These are the basic workflows you can use for that.\nBooking Cancelation\nBooking Cancelation ../../images/bookingcancelation.png\nOrderRetrieve\nOrderReshopRefund\nOrderCancel\nAdd Services to Booking\nAdd Services to Booking ../../images/bookingaddservices.png\nOrderRetrieve\nServiceList\nOrderChange\nAdd Seats to Booking\nAdd Seats to Booking ../../images/bookingaddseats.png\nOrderRetrieve\nSeatAvailability\nOrderChange\nChange Booking Dates\nChange Booking Dates ../../images/bookingdateschange.png\nOrderRetrieve\nOrderReshop\nOrderReshopReprice\nOrderChange\n"},{"id":"mydoc_webhooks","name":"Webhooks","url":"webhooks","content":"We offer some event based services like mails or slack notifications after orders are created, changes in orders or orders are canceled. We can personalize some of these services if needed, but we offer a really versatile service you can use to be notified on every event you want to track: webhooks.\nWe currently track these events:\nOrderCreated\nOrderChanged\nOrderCanceled\nOrderTicketed\nOrderStarted (Time of first flight has passed)\nOrderCompleted (Time of last flight has passed)\nServicesAddition\nServicesRemoval\nSeatsAddition\nSeatsRemoval\nDatesChanged\nFor each of these events, we can call any endpoint you want (we can use the same for all events or we can call a different one for each).\nEverytime the selected events are triggered, we'll call your endpoint with a JSON body including the information you need. This is completely configurable, we can adapt it to your needs, using any of these fields:\nagwID: Order id in our platform\norderID: Order id from airline\npnr\nrecordLocator\nbookingType: One Way, Round Trip or Multicity\norigin\ndestination\nfullPath: All legs in the order (MAD-LHR, LHR-MAD...)\nadultsPax: number of adults\nchildrenPax: number of children\ninfantsPax: number of infants\norderStatus: cancelled, on hold...\ntotalAmount\ncreatedOn\nupdatedOn\nsessionId\nagentEmail: email from the agent that triggered the event\nconsumerEmail: email from the consumer in the order\npsgPhone: contact passenger phone\npsgEmail: contact passenger email\nconsumerIataCode\nconsumerCountryCode\nconsumer: consumer name\nprovider: provider code\nagent: agent name\nagency: agency name\nFor example we can configure a task to call your endpoints on OrderTicketed with this information:\n\n{\n    \"httpRequest\": {\n        \"url\": \"https://yourservices/api/order-ticketed\",\n        \"header\": {\n            \"authorization\": \"Basic YourPassword\"\n        },\n        \"jsonBody\": {\n            \"orderID\": \"{{agwID}}\",\n            \"agent\": \"{{agent}}\",\n            \"agency\": \"{{agency}}\",\n            \"pnr\": \"{{pnr}}\",\n            \"freeText\": \"Order has been ticketed, this is your order ID: {{agwID}}\"\n        }\n    }\n}\n\n"},{"id":"mydoc_workflows","name":"Workflows","url":"workflows","content":"Introduction\nYou can use our NDC JSON API to search tickets, create orders, issue tickets, add services...\nUsing our NDC JSON API, you can book and issue tickets, and adding ancillaries to these bookings too.\nYou can find our basic workflows here:\nBooking ({{  page.url | remove:'/workflows.html' | split: '/'  }}/booking.html/)\nServicing ({{  page.url | remove:'/workflows.html' | split: '/'  }}/servicing.html/)\nMethods\nYou can find our NDC JSON API docs here (https://api.airgateway.net/v1.1/swagger-ui/).\nAnyway, below you have a little description on what these methods are used for.\nAirShopping\nYou can see the docs (https://api.airgateway.net/v1.1/swagger-ui/#!/NDC_Methods/AirDocIssue_Post) and an example (https://docs.airgateway.net/?version=latest#2e6c3925-7fc9-4675-a633-4e218762e98d) on how to use this method.\nThis method receives a \"search\" with the flights info you want to search (origin, destination, dates...) and you'll receive a list of offers of each of the airlines you send the request to (you can indicate this via headers as explained here (https://dev-guides.airgateway.net/getting_started/sending_requests_to_our_ndc_api/)).\nOfferPrice\nYou can see the docs (https://api.airgateway.net/v1.1/swagger-ui/#!/NDC_Methods/OfferPrice_Post) and an example (https://docs.airgateway.net/?version=latest#e6a12080-535a-4083-81d3-ece0841aeffd) on how to use this method.\nThis method receives the id of an offer you want to see detailed (you'll get a list of offer ids in AirShopping) and will return the information the airline gives us for that given offer. Please have in mind that details can be different from an airline to another (some airlines send really exhaustive disclosures while others only send some raw texts, for example). Some airlines don't even implement this method so we'll return the information we have for that offer from AirShopping.\nOrderCreate\nYou can see the docs (https://api.airgateway.net/v1.1/swagger-ui/#!/NDC_Methods/OrderCreate_Post) and an example (https://docs.airgateway.net/?version=latest#57433cd3-b160-4a35-8e7a-a465c8d5b96e) on how to use this method.\nThis method receives the information about the offer you want to buy and information essential to create the order (passengers info).\nYou can send payment information here too, but it's not recommended for most of the airlines and usecases. If you send payment information, some airlines will try to auto-issue the tickets immediately, which can lead to errors sometimes (if you have infants in your order, for example, you'll have to wait for confirmation from the airline first).\nSometimes it's needed to add the form of payment because airline doesn't allow order reservation for that offer. For example with Iberia you need to pay when you want to buy tickets for a flight departing today. In vueling paying when creating the order is the default option.\nOrderRetrieve\nYou can see the docs (https://api.airgateway.net/v1.1/swagger-ui/#!/NDC_Methods/OrderRetrieve_Post) of this method.\nThis method receives the ID of the order you want to retrieve and returns all the information attached to that order.\nYou'll need to call this method if you want to check the status before you go ahead with AirDocIssue, for example.\nYou'll receive all order details, everything we receive from the airline and some information we store in our databases like disclosures received in the OfferPrice or remarks and comments your agents can add.\nAirDocIssue\nYou can see the docs (https://api.airgateway.net/v1.1/swagger-ui/#!/NDC_Methods/AirDocIssue_Post) of this method.\nThis method will receive the payment method details and the order id you want to pay and get the tickets.\nYou'll receive all order details, including tickets information, everything we receive from the airline and some information we store in our databases like disclosures received in the OfferPrice or remarks and comments your agents can add.\nSeatAvailability\nThis method (https://api.airgateway.net/v1.1/swagger-ui/#!/NDC_Methods/SeatAvailability_Post) allows you to request available seats in a given offer. When it's done before you book the order (pre-booking) you'll have to add the payment method (and pay) in OrderCreate to succeed (for example with Iberia).\nSometimes even airlines which accept this method will return an error with some offers (not all flights and fares accept seat selection).\nOrderRetrieve\nYou can see the docs (https://api.airgateway.net/v1.1/swagger-ui/#!/NDC_Methods/OrderRetrieve_Post) of this method.\nThis method receives the ID of the order you want to retrieve and returns all the information attached to that order.\nYou'll need to call this method if you want to check the status before you go ahead with AirDocIssue, for example.\nYou'll receive all order details, everything we receive from the airline and some information we store in our databases like disclosures received in the OfferPrice or remarks and comments your agents can add.\nOrderReshop\nYou can see the docs (https://api.airgateway.net/v1.1/swagger-ui/#!/NDC_Methods/OrderReshop_Post) of this method.\nThis method receives the ID of the order you want to retrieve some more info like \"when\" do you want to flight instead.\nThe response will include all the offers that match that new search, it's a kind of new AirShopping.\nOrderReshopReprice\nYou can see the docs (https://api.airgateway.net/v1.1/swagger-ui/#!/NDC_Methods/OrderReshopReprice_Post) of this method.\nIt's more or less like OrderPrice in Reshop. You'll receive details about an offer to change your current order.\nOrderChange\nYou can see the docs (https://api.airgateway.net/v1.1/swagger-ui/#!/NDC_Methods/OrderChange_Post) of this method.\nThis method is called to \"save changes\" after a change (like OrderReshop, adding seats or services). You'll need to send different information depending on the action you're performing (you'll need to send the ReshopOffferID if you're changing dates but you'll have to send Services if you're adding services, for example), as long as other general data like form of payment and so on.\nYou'll receive a response with the Order details like after OrderCreate.\nSeatAvailability\nThis method (https://api.airgateway.net/v1.1/swagger-ui/#!/NDC_Methods/SeatAvailability_Post) allows you to request available seats in a given offer. When it's done before you book the order (pre-booking) you'll have to add the payment method (and pay) in OrderCreate to succeed (for example with Iberia).\nSometimes even airlines which accept this method will return an error with some offers (not all flights and fares accept seat selection).\nServiceList\nYou can see the docs (https://api.airgateway.net/v1.1/swagger-ui/#!/NDC_Methods/ServiceList_Post) of this method.\nThis service receives information about the passengers so the airlines can know what Services are available depending on the type of passenger (age) and returns a list of services with description, prices, taxes...\n"}]